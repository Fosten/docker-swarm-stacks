version: '3.9'

services:
  mongodb:
    image: mongo:6.0
    networks:
      - traefik-graylog
    volumes:
      - ${HOME}/mongodb/data:/data/db
      - ${HOME}/mongodb/config:/data/configdb
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == dispatchapp
      labels:
        - traefik.enable=true
        - traefik.http.services.justAdummyService.loadbalancer.server.port=1337
        - traefik.http.routers.traefikRouter.rule=Host(`127.0.0.11`)
        - traefik.http.routers.traefikRouter.service=api@internal
        - traefik.http.routers.traefikRouter.entrypoints=http

  datanode:
    image: ${DATANODE_IMAGE:-graylog/graylog-datanode:6.1}
    hostname: datanode
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: /var/lib/graylog-datanode/node-id
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_DATANODE_PASSWORD_SECRET: ${GRAYLOG_PASSWORD_SECRET}:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}
      GRAYLOG_DATANODE_MONGODB_URI: mongodb://mongodb:27017/graylog
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - traefik-graylog
    volumes:
      - ${HOME}/graylog/datanode:/var/lib/graylog-datanode
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == dispatchapp
      labels:
        - traefik.enable=true
        - traefik.http.services.justAdummyService.loadbalancer.server.port=1337
        - traefik.http.routers.traefikRouter.rule=Host(`127.0.0.11`)
        - traefik.http.routers.traefikRouter.service=api@internal
        - traefik.http.routers.traefikRouter.entrypoints=http

  graylog:
    hostname: graylog
    image: ${GRAYLOG_IMAGE:-graylog/graylog:6.1}
    entrypoint: /usr/bin/tini --  /docker-entrypoint.sh
    environment:
      GRAYLOG_NODE_ID_FILE: /usr/share/graylog/data/data/node-id
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_PASSWORD_SECRET: ${GRAYLOG_PASSWORD_SECRET}:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}
      GRAYLOG_ROOT_PASSWORD_SHA2: ${GRAYLOG_ROOT_PASSWORD_SHA2}:?Please configure GRAYLOG_ROOT_PASSWORD_SHA2 in the .env file}
      GRAYLOG_HTTP_BIND_ADDRESS: 0.0.0.0:9000
      GRAYLOG_HTTP_EXTERNAL_URI: https://${GRAYLOG_HOSTNAME}/
      GRAYLOG_HTTP_PUBLISH_URI: https://${GRAYLOG_HOSTNAME}
      GRAYLOG_MONGODB_URI: mongodb://mongodb:27017/graylog
      GRAYLOG_HTTP_ENABLE_CORS: "true"
    networks:
      - traefik-public
      - traefik-graylog
    volumes:
      - ${HOME}/graylog/data:/usr/share/graylog/data/data
    healthcheck:
      test: ["CMD-SHELL", "status=$$(curl -s -o /dev/null -w '%{http_code}' http://graylog:9000/api);
              if [ \"$$status\" = \"200\" ] ||
                { [ \"$$status\" = \"404\" ] &&
                  [ \"$$(curl -s -o /dev/null -w '%{http_code}' http://graylog:9000)\" = \"401\" ]; }; then
                  exit 0;
              else
                  echo \"Healthcheck failed: Graylog not responding\";
                  exit 1; fi"]
      interval: 10s
      timeout: 2s
      retries: 12
      start_period: 10s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == dispatchapp
      labels:
        - traefik.enable=true
        - traefik.swarm.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.graylog.rule=Host(`${GRAYLOG_HOSTNAME}`)
        - traefik.http.services.graylog.loadbalancer.server.port=9000
        - traefik.http.routers.graylog.entrypoints=https
        - traefik.http.routers.graylog.tls=true
        - traefik.http.routers.graylog.tls.certresolver=mydnschallenge

networks:
  traefik-public:
    external: true
  traefik-graylog:
    driver: overlay
